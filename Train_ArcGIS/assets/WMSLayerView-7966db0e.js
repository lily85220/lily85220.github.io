import{ac as r,ad as a,mJ as c,af as x,nK as f,a1 as w,W as n}from"./index-cb639cc1.js";const d=u=>{let e=class extends u{initialize(){this.exportImageParameters=new f({layer:this.layer})}destroy(){this.exportImageParameters=w(this.exportImageParameters)}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(t){const{layer:o}=this;if(!t)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o}));const{popupEnabled:m}=o;if(!m)return Promise.reject(new n("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:m}));const h=this.createFetchPopupFeaturesQuery(t);if(!h)return Promise.resolve([]);const{extent:s,width:i,height:p,x:y,y:l}=h;if(!(s&&i&&p))throw new n("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:i,height:p});return o.fetchFeatureInfo(s,i,p,y,l)}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a(c)],e.prototype,"timeExtent",void 0),e=r([x("esri.layers.mixins.WMSLayerView")],e),e};export{d as i};
