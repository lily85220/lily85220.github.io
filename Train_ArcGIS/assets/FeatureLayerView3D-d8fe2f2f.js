import{ac as i,ad as o,af as p,pb as m,b5 as l,W as a,r as n,et as y}from"./index-cb639cc1.js";import{j as c}from"./FeatureLayerViewBase3D-467fa76d.js";import"./FeatureLikeLayerView3D-1af64c96.js";import"./dehydratedFeatureComparison-3c65c83d.js";import"./queryForSymbologySnapping-28f1961f.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-66f7f08e.js";import"./optimizedFeatureQueryEngineAdapter-c88d667e.js";import"./centroid-d352bf1e.js";import"./PooledRBush-66deaec2.js";import"./QueryEngine-11c9095b.js";import"./timeSupport-5710ecff.js";import"./FeatureStore-d9578d0d.js";import"./BoundsStore-ac96c241.js";import"./heatmapTextureUtils-056b357c.js";import"./projectExtentUtils-f23a1505.js";import"./LayerView3D-2f960f05.js";import"./EventedSet-5497911d.js";import"./FeatureLayerView-92821e96.js";import"./popupUtils-fdf02f9f.js";import"./LayerView-fee1e4f7.js";import"./RefreshableLayerView-7dc52eae.js";let t=class extends c{constructor(){super(...arguments),this.type="feature-3d",this.direct3DObjectFeatureLayerDisplayEnabled=m()}initialize(){var s;const{layer:e,view:r}=this;(s=l(e))!=null&&s.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new a("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),n(e.infoFor3D)&&(this.direct3DObjectFeatureLayerDisplayEnabled?this._set("suspendResumeExtentMode","computed"):this.addResolvingPromise(Promise.reject(new a("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`)))),e.geometryType!=="mesh"||y(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};i([o({constructOnly:!0})],t.prototype,"direct3DObjectFeatureLayerDisplayEnabled",void 0),i([o()],t.prototype,"layer",void 0),t=i([p("esri.views.3d.layers.FeatureLayerView3D")],t);const A=t;export{A as default};
