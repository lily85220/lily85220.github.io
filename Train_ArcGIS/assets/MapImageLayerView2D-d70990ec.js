import{fg as g,ap as n,ak as d,a3 as l,ac as s,ad as o,af as u}from"./index-cb639cc1.js";import{a as c}from"./BitmapContainer-4f01c71a.js";import{f}from"./LayerView2D-52985332.js";import{a as y}from"./GraphicsView2D-28d2d544.js";import{n as H}from"./HighlightGraphicContainer-8c28ab06.js";import{v as _}from"./ExportStrategy-592f4635.js";import{u as w}from"./LayerView-fee1e4f7.js";import{p as v}from"./MapImageLayerView-a96e688e.js";import{i as x}from"./RefreshableLayerView-7dc52eae.js";import{S as $}from"./MapServiceLayerViewHelper-34527599.js";import{a as U}from"./drapedUtils-8847b824.js";import"./WGLContainer-22e7c87b.js";import"./definitions-19bfb61c.js";import"./WGLBrushVTLSymbol-69c603f9.js";import"./enums-b1d611e3.js";import"./number-b10bd8f5.js";import"./StyleDefinition-7d58136b.js";import"./enums-4b2a86a0.js";import"./GeometryUtils-dd03fc25.js";import"./color-916b4f87.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-3f37b110.js";import"./MaterialKey-a958dec2.js";import"./alignmentUtils-ae955d28.js";import"./utils-f978585c.js";import"./heatmapTextureUtils-056b357c.js";import"./Container-0639ee3d.js";import"./cimAnalyzer-263bafa1.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./utils-35d9b505.js";import"./Rect-ea14f53a.js";import"./normalizeUtilsSync-360fb6bc.js";import"./AttributeStoreView-0d158480.js";import"./visualVariablesUtils-e8f7cd46.js";import"./visualVariablesUtils-6a784d48.js";import"./Matcher-f36ffa66.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-95dd8b1b.js";import"./ExpandedCIM-03d4fc54.js";import"./schemaUtils-5ed910d9.js";import"./util-5c979b56.js";import"./ComputedAttributeStorage-0b11aa21.js";import"./arcadeTimeUtils-9099ffb4.js";import"./centroid-d352bf1e.js";import"./GraphicsView-a2abd211.js";import"./BaseGraphicContainer-2764499a.js";import"./FeatureContainer-b394ad2c.js";import"./TileContainer-c1add888.js";import"./Bitmap-99ee7f2b.js";import"./popupUtils-fdf02f9f.js";let a=class extends v(x(f(w))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeatures(t,i){return this._popupHighlightHelper.fetchPopupFeatures(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{n(e)||d.getLogger(this.declaredClass).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,m=e>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new y({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new H(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(p,h)=>U(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new _({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:m,hidpi:!0}),this.addAttachHandles(l(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t){return this._popupHighlightHelper.highlight(t)}};s([o()],a.prototype,"strategy",void 0),s([o()],a.prototype,"updating",void 0),a=s([u("esri.views.2d.layers.MapImageLayerView2D")],a);const xt=a;export{xt as default};
